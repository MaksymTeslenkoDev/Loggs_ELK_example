input {
    tcp {
      port => 5000
    }
  beats {
    port => 5044
  }
}

filter {
  if "mysql" in [tags] {

    date {
      match => ["timestamp", "ISO8601"]
      target => "@timestamp"
    }

    mutate {
      add_field => {
        "application" => "mysql"
        "log_type" => "mysql_slowlog"
      }
      remove_field => ["timestamp", "host", "user", "connection_id", "query_time"]  # Clean up individual fields
    }
  }

  if "nodeapp" in [tags] {
    json {
      source => "message"
    }

    json {
      source => "[log]"
    }

    mutate {
      add_field => {
        "new_message" => "Message: %{msg}, Level: %{level}, PID: %{pid}, Hostname: %{hostname}, Request ID: %{reqId}, Status Code: %{[res][statusCode]}, Response Time: %{responseTime}"
      }
      remove_field => ["log", "msg", "level", "pid", "hostname", "reqId", "res", "responseTime", "stream", "time"]  # Clean up parsed and unused fields
    }

    mutate {
      add_field => {
        "application" => "nodeapp"
        "log_type" => "applog"
      }
    }

    # Replace the old message with the new formatted one
    mutate {
      rename => { "new_message" => "message" }  # Rename new_message to message
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
  }

  # Sending to Graylog
  # gelf {
  #   host => "graylog"
  #   port => 12201
  #   protocol => "UDP"
  # }

  # stdout { codec => rubydebug }
}